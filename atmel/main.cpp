#define F_CPU 3333333UL // CPU clock is scaled to be 20 MHz / 6 -> 3.333333 MHz
#include <stdio.h>
#include <avr/io.h>
#include <avr/sleep.h>
#include <avr/power.h>
#include <util/delay.h>

/* FPGA bitstream to be written */
const uint8_t bitstream[1506] = {   0xFF, 0x20, 0x02, 0xF0, 0xDF, 0x74, 0xFC, 0xFC, 0x7F, 0xFE, 0x7E, 0x3F, 0x7F, 0xFF,
	0xED, 0x9D, 0x9D, 0xCE, 0xFF, 0xCE, 0xEB, 0xEF, 0x7F, 0xFD, 0xFD, 0xEF, 0xE7, 0xF7, 0xF7, 0xF3, 0xFB, 0xFB, 0xFF, 0xB9,
	0xFC, 0xFE, 0x7F, 0x7E, 0xFF, 0x5F, 0xFF, 0xBE, 0xF7, 0xF7, 0xBF, 0xDF, 0xDF, 0xDF, 0xEF, 0x6D, 0x6F, 0xFE, 0xFF, 0xF7,
	0xFB, 0x7B, 0xAB, 0xFD, 0xF5, 0xFD, 0xFF, 0xDF, 0xFB, 0x7B, 0xB9, 0xAF, 0x3F, 0x97, 0x9F, 0xDF, 0xFB, 0xFD, 0x5D, 0xEE,
	0xAF, 0xCD, 0xFB, 0xFB, 0xF7, 0xEF, 0x77, 0xFF, 0x6F, 0xFF, 0xBF, 0xF7, 0xFF, 0xFD, 0xDF, 0xEF, 0x3F, 0xBF, 0xBF, 0xD7,
	0xD7, 0xEB, 0xEF, 0xCB, 0xFD, 0xDF, 0xFD, 0xF7, 0xFF, 0xFE, 0xFF, 0xEF, 0xFB, 0x7F, 0xBD, 0xAB, 0xF7, 0xF3, 0xFB, 0xF7,
	0xEF, 0xFB, 0x7F, 0xF7, 0xBD, 0xFF, 0xFF, 0xFF, 0xFB, 0xFF, 0xEF, 0xBF, 0x7E, 0xE5, 0xFF, 0xAF, 0xFE, 0x7E, 0x6D, 0x3D,
	0x7D, 0xBF, 0xDF, 0x7F, 0xFD, 0xDE, 0xFD, 0xFF, 0xFD, 0xBF, 0xF7, 0xBB, 0xC7, 0xE9, 0xF7, 0xFB, 0xF6, 0xF9, 0xFF, 0x73,
	0xF7, 0x5B, 0xF2, 0x9F, 0xFD, 0xFF, 0xDF, 0xFE, 0xEF, 0xBE, 0xEF, 0x47, 0xDF, 0xBB, 0xA9, 0xEB, 0xD5, 0xF5, 0xF7, 0xFC,
	0xFF, 0xFE, 0xFF, 0xFF, 0xDF, 0x7F, 0xFF, 0xFF, 0xFB, 0xB9, 0xDC, 0xDE, 0xFF, 0xEF, 0x4F, 0xB5, 0x77, 0xBF, 0x77, 0x7F,
	0xBD, 0xCB, 0xFF, 0xFF, 0xDF, 0xFF, 0xFF, 0xFE, 0xFF, 0xF7, 0xFB, 0xFF, 0xBF, 0xB5, 0xDD, 0xD9, 0xFF, 0xDD, 0xFB, 0xFD,
	0x7F, 0xFF, 0xFF, 0xFF, 0xBF, 0xFF, 0xB9, 0xDF, 0xFD, 0xFF, 0xEF, 0xAF, 0xFF, 0xF7, 0x7F, 0xF7, 0x3E, 0xDE, 0xFF, 0x37,
	0x7B, 0x7F, 0xB7, 0xBE, 0xBD, 0xEF, 0xF7, 0xF7, 0xFF, 0xFD, 0xFF, 0xFB, 0xFF, 0xBF, 0xFD, 0xF7, 0x77, 0xCA, 0xFB, 0xFB,
	0x7D, 0xFD, 0x6D, 0xB3, 0xBE, 0xFA, 0xBF, 0x7F, 0xFF, 0xDF, 0xAD, 0xBF, 0x2F, 0xF6, 0xFD, 0xFF, 0xFB, 0xFB, 0x7F, 0xFF,
	0xFF, 0xED, 0xEE, 0xFE, 0xBE, 0xDF, 0xEF, 0x7F, 0x4D, 0xBF, 0xE5, 0xFD, 0xD7, 0xFF, 0xFF, 0xFF, 0xEF, 0xFF, 0xFF, 0xBF,
	0xFD, 0xF9, 0xDF, 0xDB, 0xEF, 0x7F, 0xFD, 0xD4, 0xFD, 0xFF, 0xFF, 0x3F, 0xFC, 0xFE, 0x75, 0xFF, 0xFF, 0xFC, 0xFF, 0xFE,
	0xE6, 0xB7, 0x36, 0xDB, 0x9F, 0x2F, 0x4F, 0xDF, 0xEF, 0x5D, 0xE9, 0xEE, 0xF7, 0x7F, 0xF7, 0xFB, 0xFB, 0xDE, 0xFB, 0xBF,
	0x7D, 0xFE, 0xEF, 0xFE, 0xCF, 0xD7, 0xDD, 0xDF, 0xF3, 0xFE, 0xFB, 0xFF, 0xFF, 0x3F, 0xFF, 0xFE, 0xFF, 0xEE, 0xF2, 0x57,
	0x7F, 0xFD, 0x7D, 0xBC, 0xFD, 0xD6, 0xBD, 0xDB, 0xFA, 0xD6, 0x6B, 0x6F, 0x2F, 0x3F, 0xBF, 0xFF, 0xFB, 0xFF, 0xDF, 0xAF,
	0xFF, 0xAF, 0xBF, 0xD7, 0xFF, 0xBF, 0x7F, 0xBB, 0xFF, 0xFB, 0xFF, 0xF6, 0xFF, 0xED, 0xFE, 0xE5, 0x7F, 0x7E, 0xFB, 0xFF,
	0xBF, 0xFF, 0xDE, 0xFF, 0xDC, 0xFB, 0x69, 0xF4, 0xF4, 0xEC, 0xFA, 0xD6, 0xEA, 0xB7, 0xBF, 0xFE, 0xDF, 0xFF, 0xFF, 0xEF,
	0xEE, 0xFB, 0xFE, 0xF5, 0x5F, 0xFB, 0xFF, 0xFE, 0xDF, 0xF7, 0xF7, 0xF6, 0xDE, 0xFF, 0xF7, 0xFF, 0xFB, 0xFB, 0x7F, 0xFF,
	0xFF, 0xDF, 0xCF, 0xFF, 0xDD, 0xFF, 0xFF, 0xEF, 0xFF, 0x7F, 0xFF, 0xF9, 0xFF, 0xFF, 0xF7, 0xFD, 0xF5, 0xCE, 0xF3, 0xF2,
	0xF7, 0x7F, 0x7F, 0xFF, 0xFE, 0xBF, 0xB7, 0x7E, 0xDE, 0xDF, 0xE3, 0xFF, 0xFD, 0xF6, 0xF4, 0xBF, 0xDB, 0xDA, 0x7F, 0xDD,
	0xDF, 0xFF, 0xF7, 0xF7, 0xE7, 0xFF, 0xFF, 0x7F, 0xDF, 0xBF, 0xEF, 0xFF, 0xFF, 0xF6, 0xD7, 0x6F, 0x7F, 0x7F, 0xF7, 0xCF,
	0xDF, 0xDF, 0xCB, 0xFF, 0xF3, 0xFF, 0xDF, 0xEE, 0xFB, 0x71, 0x79, 0xF9, 0xBD, 0xFC, 0xDC, 0xDE, 0xFD, 0xCE, 0xEE, 0xEF,
	0x4F, 0x57, 0x5F, 0xAB, 0xEB, 0xEF, 0xBB, 0xDF, 0xDF, 0xF8, 0xFB, 0xFA, 0xF5, 0xFD, 0xFD, 0xFF, 0x3F, 0xFF, 0xFF, 0xFF,
	0xFF, 0xFF, 0xEF, 0xEF, 0xFE, 0xE4, 0xB7, 0xBF, 0x9B, 0x9F, 0x9A, 0xCC, 0xED, 0xEF, 0xDD, 0xFD, 0xF5, 0xF7, 0xF3, 0xFF,
	0xFB, 0xFB, 0xDF, 0xFF, 0xBD, 0xFD, 0xE6, 0xFA, 0xFB, 0xEF, 0x7E, 0x7D, 0x7F, 0xF3, 0xFE, 0xBF, 0xFF, 0xFF, 0xDF, 0xFE,
	0xFF, 0xFF, 0xEE, 0x6F, 0xD7, 0xEB, 0xFB, 0xF3, 0xED, 0xFF, 0xCF, 0xFD, 0xD7, 0x9E, 0x9B, 0xDF, 0xDD, 0x59, 0xEB, 0x2F,
	0xAB, 0x7A, 0xFD, 0xFB, 0xFE, 0xF7, 0xFD, 0xFF, 0xFF, 0x57, 0x7F, 0x53, 0xBF, 0xBA, 0xEF, 0xDE, 0xFB, 0x7F, 0x7F, 0x7C,
	0xEF, 0xFF, 0xEF, 0xFF, 0x96, 0x17, 0xEF, 0xCF, 0xCB, 0xFC, 0xFF, 0xFD, 0xFB, 0xFE, 0xFE, 0xFF, 0x7B, 0x7B, 0x7B, 0xBF,
	0xFF, 0xE7, 0xD2, 0xFE, 0xFB, 0x7F, 0x6B, 0xFF, 0x76, 0xFF, 0xF5, 0x5F, 0xDF, 0x9F, 0xED, 0xDD, 0xFF, 0x7E, 0xEF, 0xF7,
	0xFE, 0xFE, 0x5E, 0xDD, 0xFD, 0xFD, 0xFF, 0xDE, 0xFF, 0x1B, 0x3D, 0xFF, 0xAE, 0xBE, 0xBF, 0xB7, 0xBB, 0xCC, 0xEB, 0xE2,
	0xF6, 0xFA, 0xF3, 0xF3, 0x73, 0xF7, 0x3F, 0xBB, 0xFD, 0xDF, 0xDB, 0xDE, 0xBF, 0x8D, 0xBE, 0xEF, 0xF7, 0x7F, 0xAD, 0xEF,
	0xAF, 0xF3, 0xF7, 0xF7, 0xFC, 0xFF, 0xFE, 0xEF, 0xFF, 0xFF, 0xBF, 0xFF, 0xDF, 0xFB, 0x92, 0xBA, 0xFF, 0x6E, 0x4F, 0x7F,
	0x37, 0xB5, 0xAF, 0x77, 0xF7, 0x97, 0xCF, 0x9F, 0x7F, 0xEF, 0xEF, 0xEF, 0xFE, 0xF7, 0xF7, 0xFB, 0xFB, 0xBF, 0xFD, 0xEF,
	0xFD, 0xEF, 0xCF, 0xFB, 0xFF, 0xFD, 0x7F, 0xFD, 0xBF, 0xFB, 0xFB, 0xB9, 0xBF, 0xDF, 0xBF, 0xEF, 0xFF, 0x37, 0xEF, 0xFF,
	0x77, 0x5A, 0x7E, 0x6F, 0x7D, 0x7D, 0x7F, 0xB7, 0xA4, 0xBD, 0xEB, 0xFF, 0xFF, 0xFB, 0xFF, 0xBF, 0xFD, 0xDF, 0xDF, 0xBD,
	0x5E, 0xEF, 0xEA, 0x33, 0x7B, 0x71, 0x7D, 0xFD, 0xB7, 0xBE, 0xFD, 0xFD, 0xDF, 0x7F, 0xFF, 0x2F, 0xBF, 0x2F, 0xF2, 0xFF,
	0xD6, 0xFB, 0xFB, 0xEB, 0xFD, 0xFD, 0xFD, 0xEE, 0xE7, 0xFE, 0xFF, 0xDF, 0xEF, 0x7F, 0xA7, 0xAD, 0xFF, 0xDE, 0xFE, 0xDF,
	0xFF, 0xEE, 0xF9, 0xB7, 0xF7, 0xFD, 0xFB, 0xDF, 0xDF, 0xEF, 0x3F, 0xFB, 0x3C, 0xFD, 0xF6, 0xDF, 0x3B, 0xF0, 0xED, 0xBC,
	0x7C, 0xFE, 0x7F, 0xFD, 0xDE, 0xE7, 0x45, 0xBF, 0x5B, 0x9B, 0xD3, 0xA7, 0xEF, 0xCF, 0xDC, 0xEE, 0xEF, 0xFF, 0x7F, 0x7F,
	0x5F, 0xB3, 0xBE, 0x77, 0xBD, 0xDD, 0xFF, 0xFC, 0xDF, 0xBF, 0x57, 0xDF, 0xDF, 0xF3, 0xFF, 0xFF, 0xBD, 0xFE, 0xFD, 0xDF,
	0xFE, 0xBF, 0xEE, 0x4B, 0x72, 0x5D, 0x37, 0x3D, 0xBE, 0x94, 0x9E, 0xF9, 0xDF, 0x5E, 0x5E, 0xEF, 0xEF, 0xBF, 0x3B, 0xBA,
	0xFF, 0xFB, 0xDF, 0xDD, 0xEE, 0xEE, 0xEF, 0xDF, 0xE7, 0xF7, 0xFF, 0x3F, 0xBB, 0xFF, 0xFF, 0xF7, 0xDE, 0xF7, 0xFF, 0xEF,
	0xE6, 0xFF, 0x7F, 0xFF, 0x7B, 0xFF, 0xDF, 0xFF, 0xFF, 0x5D, 0x69, 0xE9, 0xFC, 0xBC, 0xFD, 0xAA, 0xFA, 0xDA, 0xF7, 0xAF,
	0xF7, 0xF7, 0xDF, 0xFF, 0x7F, 0xE6, 0x77, 0x7E, 0xF5, 0x7B, 0xBF, 0xDD, 0x9A, 0xFD, 0xD7, 0xF7, 0xF4, 0xDE, 0xFF, 0xFE,
	0xFF, 0xFB, 0xFF, 0xFD, 0xBF, 0xBF, 0xDD, 0xCF, 0xFF, 0xDF, 0xFF, 0xFF, 0xFE, 0xFF, 0xFF, 0xFF, 0xBB, 0x7F, 0xFF, 0xF7,
	0xFF, 0xDF, 0xFB, 0xE7, 0xFE, 0xF7, 0x3F, 0x7F, 0xFF, 0xFF, 0xFF, 0xFE, 0xDF, 0xFF, 0xDF, 0xEF, 0xFE, 0xFD, 0xFF, 0x7F,
	0xFF, 0xFF, 0xFF, 0x7B, 0xDD, 0xBD, 0xFF, 0xF7, 0xFF, 0xDF, 0xDF, 0x77, 0xFF, 0xDF, 0xBF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
	0xFF, 0xFF, 0x7F, 0x77, 0xEF, 0xFF, 0xF7, 0xFF, 0xEF, 0xF3, 0x6F, 0xAD, 0xCE, 0xF6, 0xF0, 0xF5, 0xAE, 0xFC, 0xFE, 0xDF,
	0x9E, 0xFF, 0xCE, 0xFE, 0xFB, 0x76, 0x7F, 0x75, 0xEF, 0x79, 0xFF, 0x7B, 0xDD, 0xDD, 0xEE, 0xEF, 0xED, 0xD5, 0xFF, 0xFF,
	0xFF, 0x3F, 0xFF, 0xFB, 0xFF, 0xFF, 0xFF, 0xFF, 0xEF, 0xFE, 0xE4, 0xB7, 0xA7, 0xF7, 0xDB, 0xFB, 0xEF, 0xFD, 0xEB, 0x5D,
	0xFD, 0xFD, 0xDE, 0xEA, 0xFE, 0xBF, 0xFF, 0x7F, 0x7F, 0xBD, 0xFD, 0xDE, 0xFE, 0xFE, 0xEF, 0xFF, 0x77, 0x7F, 0xF3, 0xFB,
	0xBE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFE, 0x7F, 0xF7, 0xFF, 0xFF, 0xF7, 0xBF, 0xFB, 0xF7, 0xF5, 0xD2, 0x9E, 0x9F,
	0xCF, 0x4F, 0xCF, 0xAF, 0xE7, 0xE7, 0x7A, 0xFF, 0xFF, 0xBF, 0xFE, 0x7D, 0xF7, 0xFF, 0xFF, 0x6F, 0x5F, 0xDF, 0xF9, 0x9F,
	0xBD, 0xFD, 0x5A, 0xEE, 0xD5, 0xEF, 0xEF, 0xBE, 0x7F, 0x5F, 0xB7, 0xAF, 0x7F, 0xCA, 0xDD, 0x7D, 0xFF, 0xFE, 0xFE, 0xFA,
	0xFF, 0x7F, 0x7B, 0x7F, 0x97, 0xED, 0xFF, 0xF6, 0xFF, 0xF7, 0xFF, 0xEF, 0x79, 0xF7, 0x77, 0xBE, 0xFF, 0x9B, 0xDE, 0x7D,
	0xBD, 0xED, 0xFE, 0xFF, 0xF7, 0xFB, 0xDB, 0xFB, 0x5F, 0xFF, 0xFF, 0xFF, 0xDD, 0xDA, 0xBF, 0x9D, 0x9F, 0x3F, 0xEF, 0xEF,
	0xC7, 0x3B, 0xE5, 0xCB, 0xF7, 0xF6, 0xE3, 0xE6, 0xF6, 0xEF, 0xFF, 0x3B, 0x7A, 0xFD, 0xFD, 0x59, 0xFE, 0xBE, 0xFF, 0xFD,
	0xEF, 0x77, 0x5F, 0xBF, 0xAB, 0xBB, 0xD5, 0xDF, 0x5F, 0xFC, 0xFF, 0xFF, 0xEF, 0x5F, 0x7F, 0xF7, 0xFF, 0xBF, 0xFB, 0x92,
	0xFC, 0xFF, 0x6E, 0xDF, 0x4F, 0x27, 0xB7, 0xBD, 0x77, 0xD7, 0xBF, 0xFB, 0xFF, 0xFB, 0xFF, 0xFD, 0xE5, 0xFE, 0xD7, 0xF7,
	0xFB, 0xEF, 0xF3, 0xFF, 0xF5, 0xF5, 0xFF, 0xCF, 0xFA, 0xFF, 0xFF, 0xFD, 0xF6, 0xFB, 0xFB, 0xB5, 0xF9, 0xBF, 0x9F, 0xBF,
	0xEF, 0xFF, 0xFF, 0xBF, 0xF7, 0x37, 0x5E, 0x7A, 0xEF, 0x3F, 0x7F, 0x3F, 0xBE, 0x9D, 0xBD, 0xEB, 0xFF, 0xFF, 0xF9, 0xFF,
	0xFF, 0xFE, 0xFF, 0x7F, 0xBD, 0x4F, 0xF7, 0xE7, 0xFF, 0x76, 0xBD, 0xFF, 0xFF, 0xF7, 0xBE, 0xF7, 0xF5, 0xFB, 0xFD, 0xFB,
	0xEF, 0xBF, 0xFF, 0x73, 0x76, 0xFE, 0xFB, 0xFF, 0x4B, 0xFF, 0xFD, 0xFF, 0xFE, 0xFF, 0xFF, 0xFF, 0x7F, 0xFB, 0x7F, 0xAF,
	0xFF, 0xFF, 0xDF, 0xDF, 0xFF, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7B, 0xDF, 0xFF, 0xEF, 0x7F, 0xFF, 0x76, 0xFF, 0xB7,
	0xF7, 0x3C, 0xFB, 0xFD, 0xFF, 0xFD, 0x7F, 0x7F, 0xBF, 0x7E, 0xEB, 0xBF, 0x37, 0x9B, 0xEF, 0x9F, 0xA6, 0xDE, 0xE7, 0xDC,
	0xEE, 0x7E, 0x7F, 0xB7, 0xFF, 0xBB, 0xDB, 0xFB, 0xFF, 0xBD, 0xFB, 0xFF, 0xFC, 0xFE, 0xFF, 0x7F, 0x7F, 0x7F, 0xF3, 0xFF,
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x6E, 0x7F, 0x7B, 0xFD, 0xBD, 0x7F, 0xFE, 0xFE, 0xDE, 0xFD, 0xDF, 0xDF, 0xDD,
	0xEF, 0xAF, 0xAE, 0x97, 0x97, 0x17, 0xFB, 0xDE, 0xDE, 0xFF, 0xEF, 0x7F, 0x77, 0xA7, 0xB7, 0xFF, 0x3F, 0xF7, 0xFF, 0xFF,
	0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE7, 0xFF, 0xFF, 0xFF, 0xFF, 0xB7, 0xDB, 0xDB, 0xDB, 0xDC, 0xF9, 0xC8, 0xDC, 0xF4, 0xF5,
	0xFE, 0xFE, 0xFE, 0xFF, 0xBF, 0xDF, 0xFF, 0xEF, 0xFE, 0xFF, 0xFF, 0xF7, 0xFF, 0x77, 0x39, 0x7D, 0x7E, 0xBF, 0xDE, 0xAF,
	0xCF, 0x4F, 0xFE, 0x6F, 0xEF, 0xEF, 0xF1, 0xFF, 0xF7, 0xFB, 0xFF, 0xFF, 0xC7, 0xFE, 0xFF, 0x7F, 0x3F, 0x7F, 0xFF, 0xFF,
	0x2F, 0x7B, 0xBF, 0xBF, 0xBF, 0xDF, 0xFF, 0xDF, 0xFF, 0xFF, 0xFF, 0xFF,
};

/* Send one byte at a time, waiting for buffers to empty and transfers to complete */
void SPI_SendByte(uint8_t data){
	while(!(SPI0.INTFLAGS & SPI_DREIF_bm)); // Wait for data register to be empty
	SPI0.DATA = data;                       // Put data on the register
	while(!(SPI0.INTFLAGS & SPI_TXCIF_bm)); // Wait for transfer to be complete
	SPI0.INTFLAGS |= SPI_TXCIF_bm;          // Clear transfer complete flag
}

int main (void){

	// drive unused pin PA7 to low
	PORTA.DIRSET = PIN7_bm; // set pin 7 as output
	PORTA.OUTCLR = PIN7_bm; // set pin 7 low

	// enable pull-up on pin PA1 (D/~P)
	PORTA.PIN1CTRL |= PORT_PULLUPEN_bm;

	// enable pull-up on pin PA3 (SCLK)
	PORTA.PIN3CTRL |= PORT_PULLUPEN_bm;

	PORTMUX.CTRLB = PORTMUX_SPI0_bm;  // Set pins to expect SPI0 config instead of typical GPIO
	PORTA.DIRSET = PIN3_bm | PIN6_bm; // pin3 = SCK, pin6 = alternate MOSI (switch to pin1 potentially)
	SPI0.CTRLA = SPI_MASTER_bm;       // Set SPI0 to Master Mode
	//SPI0.CTRLA |= SPI_PRESC0_bm | SPI_CLK2X_bm; // PRESC0 divides peripheral clock by 16, CLK2X doubles it -> CLKPER/8
	SPI0.CTRLA |= SPI_CLK2X_bm;       // CLK2X doubles it -> CLKPER*2
	//SPI0.CTRLA |= SPI_PRESC0_bm;    // PRESC0 divides peripheral clock by 16 -> CLKPER/16
	SPI0.CTRLB |= SPI_SSD_bm | SPI_BUFEN_bm; // disable SS line as Master, enable Buffer Mode
	SPI0.CTRLA |= SPI_ENABLE_bm;      // Enable SPI

	PORTA.DIRSET = PIN1_bm | PIN2_bm; // Set PA1 and PA2 to use as GPIO (D/~P and reset lines on FPGA)
	PORTA.OUTSET = PIN1_bm | PIN2_bm; // Set them high
	_delay_ms(2);           // Let it be high for some time and ensure FPGA is awake
	PORTA.OUTCLR = PIN1_bm | PIN2_bm; // Set them low (clear)
	_delay_ms(1);           // Absurdly long low pulse (only 6us required)
	PORTA.DIRCLR = PIN1_bm | PIN2_bm; // let go of D/~P and reset

	_delay_ms(1); // give reset line time to recover

	uint16_t i = 0;
	while(i < 1506){ // Push the bitstream
		SPI_SendByte(bitstream[i]);
		i++;
	}

	PORTA.DIRCLR = PIN3_bm | PIN6_bm; // Turn off Clock and MOSI
	SPI0.CTRLA &= (0 << 0); // Disable SPI

	// enable pull-up and disable input buffer on each pin
	PORTA.PIN0CTRL = PORT_PULLUPEN_bm | PORT_ISC_INPUT_DISABLE_gc;
	PORTA.PIN1CTRL = PORT_PULLUPEN_bm | PORT_ISC_INPUT_DISABLE_gc;
	PORTA.PIN2CTRL = PORT_PULLUPEN_bm | PORT_ISC_INPUT_DISABLE_gc;
	PORTA.PIN3CTRL = PORT_PULLUPEN_bm | PORT_ISC_INPUT_DISABLE_gc;
	PORTA.PIN4CTRL = PORT_PULLUPEN_bm | PORT_ISC_INPUT_DISABLE_gc;
	PORTA.PIN5CTRL = PORT_PULLUPEN_bm | PORT_ISC_INPUT_DISABLE_gc;
	PORTA.PIN6CTRL = PORT_PULLUPEN_bm | PORT_ISC_INPUT_DISABLE_gc;
	PORTA.PIN7CTRL = PORT_PULLUPEN_bm | PORT_ISC_INPUT_DISABLE_gc;

	// set all pins as output
	PORTA.DIRCLR = PIN0_bm | PIN1_bm | PIN2_bm | PIN3_bm | PIN6_bm | PIN7_bm;

	// disable ADC
	ADC0.CTRLA &= ~ADC_ENABLE_bm;

	// sleepy time
	set_sleep_mode(SLEEP_MODE_PWR_DOWN);
	sleep_enable();

	while(1)
	{
		sleep_cpu();
	}

}
