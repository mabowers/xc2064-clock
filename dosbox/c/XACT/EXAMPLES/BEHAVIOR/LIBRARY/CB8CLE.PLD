TITLE           Counter: binary, up, 8-bit, async-clear, loadable
PATTERN         vmh
REVISION        5.0.0
AUTHOR          Jeff Seltzer 
COMPANY         Xilinx EPLD
DATE            8/24/93

CHIP            CB8CLE  COMPONENT
 
;Inputs
d0 d1 d2 d3 d4 d5 d6 d7 l ce c clr

; d[7:0]        parallel-load data
; l             parallel-load enable
; ce            count enable
; c             clock (optional FastCLK)
; clr           async clear
 
;Outputs
q0 q1 q2 q3 q4 q5 q6 q7 tc ceo

; q[7:0]        counter output
; tc            terminal count (optimizable AND)
; ceo           chip enable output (optimizable AND)

NODE (UIM) tc ceo

EQUATIONS 

tc       = q0*q1*q2*q3*q4*q5*q6*q7

ceo      = ce*q0*q1*q2*q3*q4*q5*q6*q7

q7.d1    = ce*/l*q0*q1*q2*q3*q4*q5*q6
         +  l*d7
q7.fbk   = /l
q7      := q7.d1 xor q7.d2
q7.clkf  = c
q7.rstf  = clr

q6.d1    = ce*/l*q0*q1*q2*q3*q4*q5
         +  l*d6
q6.fbk   = /l
q6      := q6.d1 xor q6.d2
q6.clkf  = c
q6.rstf  = clr

q5.d1    = ce*/l*q0*q1*q2*q3*q4
         +  l*d5
q5.fbk   = /l
q5      := q5.d1 xor q5.d2
q5.clkf  = c
q5.rstf  = clr

q4.d1    = ce*/l*q0*q1*q2*q3
         +  l*d4
q4.fbk   = /l
q4      := q4.d1 xor q4.d2
q4.clkf  = c
q4.rstf  = clr

q3.d1    = ce*/l*q0*q1*q2
         +  l*d3
q3.fbk   = /l
q3      := q3.d1 xor q3.d2
q3.clkf  = c
q3.rstf  = clr

q2.d1    = ce*/l*q0*q1
         +  l*d2
q2.fbk   = /l
q2      := q2.d1 xor q2.d2
q2.clkf  = c
q2.rstf  = clr

q1.d1    = ce*/l*q0
         +  l*d1
q1.fbk   = /l
q1      := q1.d1 xor q1.d2
q1.clkf  = c
q1.rstf  = clr

q0.d1    = ce*/l
         +  l*d0
q0.fbk   = /l
q0      := q0.d1 xor q0.d2
q0.clkf  = c
q0.rstf  = clr

q0.prld  = gnd
q1.prld  = gnd
q2.prld  = gnd
q3.prld  = gnd
q4.prld  = gnd
q5.prld  = gnd
q6.prld  = gnd
q7.prld  = gnd
